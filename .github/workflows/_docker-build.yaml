name: '~Docker Build'
on:
  workflow_call:
    inputs:
      name:
        type: string
        description: 'Image Name'
      file:
        type: string
        description: 'Dockerfile'

env:
  REGISTRY: 'ghcr.io'
  REPOSITORY: 'Qwoon'

jobs:
  build:
    name: 'Build'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@main'

      - name: 'Repository Variables'
        uses: 'infovista-opensource/vars-to-env-action@2.0.0'
        if: vars
        with:
          secrets: ${{ toJson(vars) }}
          override: true

      - name: 'Environment Variables'
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          echo "::add-mask::$GHCR_TOKEN"
          echo "GHCR_TOKEN=$GHCR_TOKEN" >> "$GITHUB_ENV"
          echo "GITHUB_SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: 'Setup Docker'
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      # https://github.com/docker/login-action
      - name: 'Login to Github Container Registry'
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Check if image tag already exists
      # https://github.com/tyriis/docker-image-tag-exists
      - uses: tyriis/docker-image-tag-exists@v2.0.1
        id: check
        with:
          registry: ${{ env.REGISTRY }}
          repository: ${{ env.REPOSITORY }}/${{ env.PROJECT }}-${{ inputs.name }}
          tag: ${{ env.GITHUB_SHORT_SHA }}

      - name: 'Docker meta'
        if: ${{ steps.check.outputs.tag == 'not found' }}
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: '${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.PROJECT }}-${{ inputs.name }}'
          tags: type=sha,format=short,prefix=

      - name: 'Docker Build Image'
        if: ${{ steps.check.outputs.tag == 'not found' }}
        uses: docker/build-push-action@v5.3.0
        with:
          push: true
          file: ${{ inputs.file }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
